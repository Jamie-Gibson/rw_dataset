swagger: '2.0'
info:
  title: RW Dataset API
  description: Resource Watch - Dataset API
  version: "1.0.0"
host: ec2-52-23-163-254.compute-1.amazonaws.com

schemes:
  - http

produces:
  - application/json

paths:
  /datasets/{id}:
    get:
      description: Returns dataset based on a single ID, if the geostore not exist return 404
      produces:
        - application/json
      tags:
        - Dataset
      parameters:
        - name: id
          in: path
          description: ID of dataset to fetch
          required: true
          type: string
      responses:
        200:
          description: Dataset obtained
          schema:
            $ref: '#/definitions/Dataset'
        404:
          description: Dataset not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      description: Update dataset based on a single ID, if the geostore not exist return 404
      produces:
        - application/json
      tags:
        - Dataset
      parameters:
        - name: id
          in: path
          description: ID of dataset to update
          required: true
          type: string
        - name: dataset
          in: body
          description: New data of the dataset
          required: true
          schema:
            $ref: '#/definitions/DatasetCreate'
      responses:
        200:
          description: Dataset updated
          schema:
            $ref: '#/definitions/Dataset'
        404:
          description: Dataset not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: Delete dataset based on a single ID, if the geostore not exist return 404
      produces:
        - application/json
      tags:
        - Dataset
      parameters:
        - name: id
          in: path
          description: ID of dataset to delete
          required: true
          type: string
      responses:
        200:
          description: Dataset updated
          schema:
            $ref: '#/definitions/Dataset'
        404:
          description: Dataset not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /datasets:
    get:
      description: Returns all datasets
      produces:
        - application/json
      tags:
        - Dataset
      responses:
        200:
          description: Datasets obtained
          schema:
            $ref: '#/definitions/Datasets'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create dataset
      description: Create dataset
      produces:
        - application/json
      tags:
        - Dataset
      parameters:
        - name: dataset
          in: body
          description: Dataset to save
          required: true
          schema:
            $ref: '#/definitions/DatasetCreate'
      responses:
        200:
          description: The object created
          schema:
            $ref: '#/definitions/Dataset'
        400:
          description: Validate error
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:
  DatasetCreate:
    type: object
    properties:
      dataset:
        type: object
        properties:
          connector_name:
            type: string
            description: Name of the dataset
          connector_url:
            type: string
            description: Url of dataset
          connector_path:
            type: string
            description: Path of connector
          connector_provider:
            type: integer
            format: int32
            description: Id of the provider (0 - Carto)
          connector_format:
            type: integer
            format: int32
            description: Id of the format (0 - Carto)
          attributes_path:
            type: string
            description: Attributes of the path
          dataset_attributes:
            type: object
            description: Attributes of dataset
            properties:
              table_name:
                type: string
                description: Table name to obtain data

  Datasets:
    type: array
    items:
      $ref: '#/definitions/Dataset'

  Dataset:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: Dataset id
      connector_name:
        type: string
        description: Name of the dataset
      provider:
        type: string
        description: Name of the provider
      format:
        type: string
        description: Data format
      rest_connector_params:
        type: array
        items:
          type: object
          description: Objects {key, value} with headers, params, that it is neccesary to attack url dataset
      dataset_meta:
        type: object
        properties:
          connector_url:
            type: string
            description: Url of connector
          connector_path:
            type: string
            description: Path of connector
          table_name:
            type: string
            description: Name of the table of the dataset
          table_columns:
            type: object
            description: Object with key (name of column) and type (type of data)

  Error:
    type: object
    properties:
      status:
        type: string
        description: The HTTP status code applicable to this problem, expressed as a string value
      error:
        type: string
        description: An application-specific error code, expressed as a string value
      exception:
        type: string
        description: A short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.
      traces:
        type: string
        description: A human-readable explanation specific to this occurrence of the problem. Like title, this field's value can be localized
