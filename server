#! /bin/bash

case "$1" in
    start)
        ps -ef | grep 3000 | grep puma
        if [ $? -eq 1 ]
        then
          case "$2" in
            develop)
              echo "Starting redis"
              echo "Startting server..."
              bundle exec puma -t 5:5 -d -p ${RW_DATASET_PORT:-3000} -e ${RW_DATASET_ENV:-development} -S ~/puma -C config/puma.rb
              echo "Server running on port 3000 ;)!"
              echo "Starting sidekiq..."
              bundle exec sidekiq -C config/sidekiq.yml
              echo "Register RW Dataset"
              curl --request POST \
                   --url http://192.168.99.100:8000/gateway/service \
                   --header 'cache-control: no-cache' \
                   --header 'content-type: application/json' \
                   --data "$(cat lib/files/service_develop.json)"
            ;;
            esac
        else
          echo "Server already running on port 3000 ;)!"
        fi
        ;;
    stop)
        ps -ef | grep 3000 | grep puma
        if [ $? -eq 1 ]
        then
          echo "Server is down."
        else
          echo "Stopping server..."
          kill -9 $(lsof -i tcp:3000 -t)
          echo "Server is down."
        fi
        echo "Stopping sidekiq..."
        bundle exec sidekiqctl stop tmp/pids/sidekiq.pid 0
        ;;
    status)
        ps -ef | grep 3000 | grep puma
        if [ $? -eq 1 ]
        then
          echo "Server is down."
        else
          echo "Server running on port 3000 ;)!"
        fi
        ;;
    restart)
        ps -ef | grep 3000 | grep puma
        if [ $? -eq 1 ]
        then
          bundle exec puma -t 5:5 -d -p ${RW_DATASET_PORT:-3000} -e ${RW_DATASET_ENV:-development} -S ~/puma -C config/puma.rb
        else
          kill -9 $(lsof -i tcp:3000 -t) && bundle exec puma -t 5:5 -d -p ${RW_DATASET_PORT:-3000} -e ${RW_DATASET_ENV:-development} -S ~/puma -C config/puma.rb
        fi
        echo "Starting sidekiq..."
        bundle exec sidekiq -C config/sidekiq.yml
        ;;
    register-service)
        curl --request POST \
             --url http://ec2-52-23-163-254.compute-1.amazonaws.com/gateway/service \
             --header 'cache-control: no-cache' \
             --header 'content-type: application/json' \
             --data "$(cat lib/files/service.json)"
        ;;
  *)
        echo "Usage: server {start|stop|status|restart}" >&2
        exit 1
        ;;
esac

exit 0
